---
import { type CollectionEntry, getEntry } from 'astro:content';

import FormattedDate from '@components/dates/FormattedDate.astro';
import Page from '@layouts/Page.astro';
// import SeriesSummary from '@components/content/SeriesSummary.astro';
import { getPosts } from '@root/util/query';
import ColumnThin from '@layouts/ColumnThin.astro';
import PostContent from '@root/components/blog/PostContent.astro';
import SeriesContent from '@root/components/blog/SeriesContent.astro';


export async function getStaticPaths() {
	const posts = await getPosts({ includeSeries: true });
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;

const series = await (async () => {
	if(!post.data.series) { return undefined; }
	const s = await getEntry("series", post.data.series.seriesId.slug);
	return s;
})();
---

<Page pageTitle={post.data.title}>
	<ColumnThin>
	<article>
		<div class="prose">
			<div class="title">
				<div class="date">
					<FormattedDate date={post.data.datePublished} />
					{
						post.data.dateUpdated && (
							<div class="last-updated-on">
								Last updated on <FormattedDate date={post.data.dateUpdated} />
							</div>
						)
					}
				</div>
				<div class="post-supertitle">
					{
						series && `${series.data.title}, Part ${post.data.series!.seriesNumber}`
					}
				</div>
				<h1>{post.data.title}</h1>
				<hr />
			</div>
			{ series && <SeriesContent series={series} activeSlug={post.slug} > }
			{/* { series && <SeriesSummary series={series} activeSlug={post.slug}/> } */}
			<PostContent post={post} />
		</div>
	</article>
</ColumnThin>
</Page>