---
import { type CollectionEntry, getEntry } from 'astro:content';

import FormattedDate from '@components/dates/FormattedDate.astro';
import Page from '@layouts/Page.astro';
// import SeriesSummary from '@components/content/SeriesSummary.astro';
import { getPosts } from '@root/util/query';
import ColumnThin from '@layouts/ColumnThin.astro';
import PostContent from '@root/components/blog/PostContent.astro';
import SeriesContent from '@root/components/blog/SeriesContent.astro';


export async function getStaticPaths() {
	const posts = await getPosts({ includeSeries: true });
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;

const series = await (async () => {
	if(!post.data.series) { return undefined; }
	const s = await getEntry("series", post.data.series.seriesId.slug);
	return s;
})();

const appendixLabels = "ABCDEFGHIJKLMNOPQRSTUV".split("");

const titleDisplay = post.data.titleDisplay ? post.data.titleDisplay : post.data.title;
const titleIsHtml = !!post.data.titleDisplay;

const seriesData = post.data.series;
const label = seriesData ? (seriesData.isAppendix ?
  `Appendix ${appendixLabels[seriesData.seriesNumber-1]}` :
  `Part ${seriesData.seriesNumber}`) : null;
---

<Page pageTitle={post.data.title}>
	<ColumnThin>
	<article>
		<div class="article">
			<div class="article-header">
				{
					titleIsHtml ?
						<h1 class="article-title" set:html={titleDisplay} /> :
						<h1 class="article-title">{titleDisplay}</h1>
				}
				<!-- subtitle -->
				<div class="article-subtitle">
					{series && `${series.data.title}, ${label}`}
				</div>
				<!-- date -->
				<div class="article-date">
					Published <FormattedDate date={post.data.datePublished} />
					{
						post.data.dateUpdated && (
							<div class="last-updated-on">
								Updated <FormattedDate date={post.data.dateUpdated} />
							</div>
						)
					}
				</div>
			</div>
			{ series && <SeriesContent series={series} activeSlug={post.slug} /> }
			<PostContent post={post} />
		</div>
	</article>
</ColumnThin>
</Page>

<style>
.article .article-header {
	margin: 4em 0;
}
.article h1.article-title {
	font-size: 2.2em;
	text-align: center;
	font-weight: 500;
	margin: 0 var(--gap-1);
}

.article .article-subtitle {
	color: var(--font-subtitle-color);
	text-align: center;
	margin: var(--gap-1);
}

.article .article-date {
	color: var(--font-subtitle-color);
	text-align: center;
	margin: var(--gap-1) 0;
	font-style: italic;
}
</style>