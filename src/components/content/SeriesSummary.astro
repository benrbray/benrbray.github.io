---
import type { CollectionEntry } from 'astro:content';
import { getSeriesPosts } from '@root/util/query';
import SeriesSummaryEntry from './SeriesSummaryEntry.astro';
interface Props {
  series: CollectionEntry<'series'>,
	activeSlug?: CollectionEntry<'blog'>["slug"]
}

const { series, activeSlug } = Astro.props;

const posts = await getSeriesPosts(series);
---

<div class="series" style={`--series-bg-image: url(${series.data.imageSummary})`}>
	<div class="series-header">
		<div class="series-title"><a href={`/series/${series.slug}/`}>{series.data.title}</a></div>
	</div>
	<div class="series-image"></div>
	<div class="series-summary">
	<p>{series.body}
	</div>
	<div class="series-posts">
    {posts.map(p => {
      const isActivePost = p.slug === activeSlug;
      return <SeriesSummaryEntry
				showHeadings={isActivePost}
				isActivePost={isActivePost}
				post={p}
			/>
    })}
		</ul>
	</div>
</div>
<style>
.series {
	background-color: #f3ffe4;
	border-radius: var(--gap-1);
	padding: var(--gap-1);
	margin: var(--gap-1);
}

.series {
	position: relative;
	z-index: 0;
}

.series-image {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	height: 3.5em;

	border-radius: var(--gap-1) var(--gap-1) 0 0;
	z-index: 1;

	mask-image: linear-gradient(to bottom in oklab, rgba(0,0,0,0.4), rgba(0,0,0,0));
	background: var(--series-bg-image), #cfffe5;
	background-blend-mode: multiply, normal;
	background-position: top, top;
	background-repeat: no-repeat;
	background-size: cover;

	user-select: none;
}

.series .series-header {
	z-index: 2;
}

.series .series-title {
	font-size: var(--font-size-post-title);
	font-weight: var(--font-title-weight);
	position: relative;
	z-index: 2;
}

.series .series-title a {
	color: var(--font-normal-color);
}

.series-posts {
	display: grid;
	grid-template-columns: 8em 1fr;
}
</style>